{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import compression from \"compression\";\nimport cookieParser from \"cookie-parser\";\nimport cors from \"cors\";\nimport express from \"express\";\nimport helmet from \"helmet\";\nimport hpp from \"hpp\";\nimport morgan from \"morgan\";\nimport { connect, set } from \"mongoose\";\nimport swaggerJSDoc from \"swagger-jsdoc\";\nimport swaggerUi from \"swagger-ui-express\";\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from \"@/config/env\";\nimport { dbConnection } from \"@/config/database\";\nimport { Routes } from \"@/interfaces/routesInterface\";\nimport errorMiddleware from \"@/middlewares/errorMiddleware\";\nimport { logger, stream } from \"@/utils/logger\";\n\nclass App {\n\tpublic app: express.Application;\n\tpublic env: string;\n\tpublic port: string | number;\n\n\tconstructor(routes: Routes[]) {\n\t\tthis.app = express();\n\t\tthis.env = NODE_ENV || \"development\";\n\t\tthis.port = PORT || 3000;\n\n\t\tthis.connectToDatabase();\n\t\tthis.initializeMiddlewares();\n\t\tthis.initializeRoutes(routes);\n\t\tthis.initializeSwagger();\n\t\tthis.initializeErrorHandling();\n\t}\n\n\tpublic listen() {\n\t\tthis.app.listen(this.port, () => {\n\t\t\tlogger.info(`======= ENV: ${this.env} =======`);\n\t\t\tlogger.info(`ðŸš€ App listening on the port ${this.port}`);\n\t\t});\n\t}\n\n\tpublic getServer() {\n\t\treturn this.app;\n\t}\n\n\tprivate connectToDatabase() {\n\t\tif (this.env !== \"production\") {\n\t\t\tset(\"debug\", true);\n\t\t}\n\n\t\tconnect(dbConnection.url, dbConnection.options, (error) => {\n\t\t\tif (error) {\n\t\t\t\tlogger.error(\"DB: MongoDB Connection error:\", error);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate initializeMiddlewares() {\n\t\tthis.app.use(morgan(LOG_FORMAT, { stream }));\n\t\tthis.app.use(cors());\n\t\tthis.app.use(hpp());\n\t\tthis.app.use(helmet({ crossOriginEmbedderPolicy: false }));\n\t\tthis.app.use(compression());\n\t\tthis.app.use(express.json());\n\t\tthis.app.use(express.urlencoded({ extended: true }));\n\t\tthis.app.use(cookieParser());\n\t}\n\n\tprivate initializeRoutes(routes: Routes[]) {\n\t\troutes.forEach((route) => {\n\t\t\tthis.app.use(\"/\", route.router);\n\t\t});\n\t}\n\n\tprivate initializeSwagger() {\n\t\tconst options = {\n\t\t\tswaggerDefinition: {\n\t\t\t\tinfo: {\n\t\t\t\t\ttitle: \"REST API\",\n\t\t\t\t\tversion: \"1.0.0\",\n\t\t\t\t\tdescription: \"Example docs\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tapis: [\"swagger.yaml\"]\n\t\t};\n\n\t\tconst specs = swaggerJSDoc(options);\n\t\tthis.app.use(\"/api-docs\", swaggerUi.serve, swaggerUi.setup(specs));\n\t}\n\n\tprivate initializeErrorHandling() {\n\t\tthis.app.use(errorMiddleware);\n\t}\n}\n\nexport default App;"],"names":["App","listen","app","port","logger","info","env","getServer","connectToDatabase","set","connect","dbConnection","url","options","error","process","exit","initializeMiddlewares","use","morgan","LOG_FORMAT","stream","cors","hpp","helmet","crossOriginEmbedderPolicy","compression","express","json","urlencoded","extended","cookieParser","initializeRoutes","routes","forEach","route","router","initializeSwagger","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","errorMiddleware","constructor","NODE_ENV","PORT"],"mappings":"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"}