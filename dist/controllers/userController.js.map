{"version":3,"sources":["../../src/controllers/userController.ts"],"sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport { CreateUserDto } from \"@/dtos/userDto\";\nimport { User } from \"@/interfaces/userInterface\";\nimport UserService from \"@/services/userServices\";\n\nexport default class AdminsController {\n  public userService = new UserService();\n\n  public getUsers = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const findAllUserData: User[] = await this.userService.findAllUser(req.query);\n\n      res.status(200).json({ data: findAllUserData, message: \"findAll\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getUserById = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const findOneAdminData: User = await this.userService.findUserById(req.params.id);\n\n      res.status(200).json({ data: findOneAdminData, message: \"findOne\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const createUserData: User = await this.userService.createAdmin(\n        req.body as CreateUserDto\n      );\n\n      res.status(201).json({ data: createUserData, message: \"created\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const updateAdminData: User = await this.userService.updateAdmin(\n        req.params.id,\n        req.body as CreateUserDto\n      );\n\n      res.status(200).json({ data: updateAdminData, message: \"updated\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public deleteUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const deleteAdminData: User = await this.userService.deleteAdmin(req.params.id);\n\n      res.status(200).json({ data: deleteAdminData, message: \"deleted\" });\n    } catch (error) {\n      next(error);\n    }\n  };\n}"],"names":["AdminsController","userService","UserService","getUsers","req","res","next","findAllUserData","findAllUser","query","status","json","data","message","error","getUserById","findOneAdminData","findUserById","params","id","createUser","createUserData","createAdmin","body","updateUser","updateAdminData","updateAdmin","deleteUser","deleteAdminData","deleteAdmin"],"mappings":";;;;;;aAKqBA;;uDAFG;;;;;;;;;;;;;;;;;;;AAET,IAAA,AAAMA,mBAAN,MAAMA;;QACnB,uBAAOC,eAAc,IAAIC,qBAAW;QAEpC,uBAAOC,YAAW,OAAOC,KAAcC,KAAeC,OAAuB;YAC3E,IAAI;gBACF,MAAMC,kBAA0B,MAAM,IAAI,CAACN,WAAW,CAACO,WAAW,CAACJ,IAAIK,KAAK;gBAE5EJ,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAML;oBAAiBM,SAAS;gBAAU;YACnE,EAAE,OAAOC,OAAO;gBACdR,KAAKQ;YACP;QACF;QAEA,uBAAOC,eAAc,OAAOX,KAAcC,KAAeC,OAAuB;YAC9E,IAAI;gBACF,MAAMU,mBAAyB,MAAM,IAAI,CAACf,WAAW,CAACgB,YAAY,CAACb,IAAIc,MAAM,CAACC,EAAE;gBAEhFd,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMI;oBAAkBH,SAAS;gBAAU;YACpE,EAAE,OAAOC,OAAO;gBACdR,KAAKQ;YACP;QACF;QAEA,uBAAOM,cAAa,OAAOhB,KAAcC,KAAeC,OAAuB;YAC7E,IAAI;gBACF,MAAMe,iBAAuB,MAAM,IAAI,CAACpB,WAAW,CAACqB,WAAW,CAC7DlB,IAAImB,IAAI;gBAGVlB,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMS;oBAAgBR,SAAS;gBAAU;YAClE,EAAE,OAAOC,OAAO;gBACdR,KAAKQ;YACP;QACF;QAEA,uBAAOU,cAAa,OAAOpB,KAAcC,KAAeC,OAAuB;YAC7E,IAAI;gBACF,MAAMmB,kBAAwB,MAAM,IAAI,CAACxB,WAAW,CAACyB,WAAW,CAC9DtB,IAAIc,MAAM,CAACC,EAAE,EACbf,IAAImB,IAAI;gBAGVlB,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMa;oBAAiBZ,SAAS;gBAAU;YACnE,EAAE,OAAOC,OAAO;gBACdR,KAAKQ;YACP;QACF;QAEA,uBAAOa,cAAa,OAAOvB,KAAcC,KAAeC,OAAuB;YAC7E,IAAI;gBACF,MAAMsB,kBAAwB,MAAM,IAAI,CAAC3B,WAAW,CAAC4B,WAAW,CAACzB,IAAIc,MAAM,CAACC,EAAE;gBAE9Ed,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,MAAMgB;oBAAiBf,SAAS;gBAAU;YACnE,EAAE,OAAOC,OAAO;gBACdR,KAAKQ;YACP;QACF;;AACF"}