{"version":3,"sources":["../../src/services/workspaceServices.ts"],"sourcesContent":["import { HttpException } from \"@exceptions/httpException\";\nimport workspaceModel from \"@/models/Workspace\";\nimport userModel from \"@/models/User\";\nimport { isEmpty } from \"@utils/util\";\nimport { Workspace } from \"@/interfaces/workspaceInterface\";\nimport { CreateWorkspace, UpdateWorkspaceDto } from \"@/dtos/workspaceDto\";\n\nexport default class WorkspaceServices {\n    public workspaces = workspaceModel;\n    public users = userModel;\n\n    public async findAllWorkspaces(query: object): Promise<Workspace[]> {\n        return this.workspaces.find(query).select(\"-__v\");\n    }\n\n    public async findOneWorkspace(_id: string): Promise<Workspace> {\n        if (isEmpty(_id)) throw new HttpException(400, \"_id is empty\");\n\n        const findWorkspace: Workspace = await this.workspaces\n            .findOne({ _id: _id })\n            .populate(\"userId\", \"_id firstName lastName username role\")\n            .select(\"-__v\");\n\n        if (!findWorkspace) throw new HttpException(409, \"Workspace doesn't exist\");\n\n        return findWorkspace;\n    }\n\n    public async findWorkspaceById(_id: string): Promise<Workspace[]> {\n        if (isEmpty(_id)) throw new HttpException(400, \"_id is empty\");\n\n        const findWorkspace: Workspace[] = await this.workspaces\n            .find({ _id: _id })\n            .select(\"-__v\");\n\n        if (!findWorkspace) throw new HttpException(409, \"Workspace doesn't exist\");\n\n        return findWorkspace;\n    }\n\n    public async createWorkspace(workspaceData: CreateWorkspace): Promise<Workspace> {\n        if (isEmpty(workspaceData)) throw new HttpException(400, \"workspaceData is empty\");\n\n        return this.workspaces.create(workspaceData);\n    }\n\n    public async updateWorkspace(_id: string, workspaceData: UpdateWorkspaceDto): Promise<Workspace> {\n        if (isEmpty(workspaceData)) throw new HttpException(400, \"workspaceData is empty\");\n\n        const updateWorkspaceById: Workspace = await this.workspaces\n            .findByIdAndUpdate(_id, workspaceData, { new: true })\n            .select(\"-__v\");\n        if (!updateWorkspaceById) throw new HttpException(409, \"Workspace doesn't exist\");\n\n        return updateWorkspaceById;\n    }\n\n    public async deleteWorkspace(_id: string): Promise<Workspace> {\n        const deleteWorkspaceById: Workspace = await this.workspaces\n            .findByIdAndDelete(_id)\n            .select(\"-__v\");\n        if (!deleteWorkspaceById) throw new HttpException(409, \"Workspace doesn't exist\");\n\n        return deleteWorkspaceById;\n    }\n}"],"names":["WorkspaceServices","findAllWorkspaces","query","workspaces","find","select","findOneWorkspace","_id","isEmpty","HttpException","findWorkspace","findOne","populate","findWorkspaceById","createWorkspace","workspaceData","create","updateWorkspace","updateWorkspaceById","findByIdAndUpdate","new","deleteWorkspace","deleteWorkspaceById","findByIdAndDelete","workspaceModel","users","userModel"],"mappings":";;;;;;aAOqBA;;+BAPS;oDACH;+CACL;sBACE;;;;;;;;;;;;;;;;;;;AAIT,IAAA,AAAMA,oBAAN,MAAMA;IAIjB,MAAaC,kBAAkBC,KAAa,EAAwB;QAChE,OAAO,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,OAAOG,MAAM,CAAC;IAC9C;IAEA,MAAaC,iBAAiBC,GAAW,EAAsB;QAC3D,IAAIC,IAAAA,aAAO,EAACD,MAAM,MAAM,IAAIE,4BAAa,CAAC,KAAK,gBAAgB;QAE/D,MAAMC,gBAA2B,MAAM,IAAI,CAACP,UAAU,CACjDQ,OAAO,CAAC;YAAEJ,KAAKA;QAAI,GACnBK,QAAQ,CAAC,UAAU,wCACnBP,MAAM,CAAC;QAEZ,IAAI,CAACK,eAAe,MAAM,IAAID,4BAAa,CAAC,KAAK,2BAA2B;QAE5E,OAAOC;IACX;IAEA,MAAaG,kBAAkBN,GAAW,EAAwB;QAC9D,IAAIC,IAAAA,aAAO,EAACD,MAAM,MAAM,IAAIE,4BAAa,CAAC,KAAK,gBAAgB;QAE/D,MAAMC,gBAA6B,MAAM,IAAI,CAACP,UAAU,CACnDC,IAAI,CAAC;YAAEG,KAAKA;QAAI,GAChBF,MAAM,CAAC;QAEZ,IAAI,CAACK,eAAe,MAAM,IAAID,4BAAa,CAAC,KAAK,2BAA2B;QAE5E,OAAOC;IACX;IAEA,MAAaI,gBAAgBC,aAA8B,EAAsB;QAC7E,IAAIP,IAAAA,aAAO,EAACO,gBAAgB,MAAM,IAAIN,4BAAa,CAAC,KAAK,0BAA0B;QAEnF,OAAO,IAAI,CAACN,UAAU,CAACa,MAAM,CAACD;IAClC;IAEA,MAAaE,gBAAgBV,GAAW,EAAEQ,aAAiC,EAAsB;QAC7F,IAAIP,IAAAA,aAAO,EAACO,gBAAgB,MAAM,IAAIN,4BAAa,CAAC,KAAK,0BAA0B;QAEnF,MAAMS,sBAAiC,MAAM,IAAI,CAACf,UAAU,CACvDgB,iBAAiB,CAACZ,KAAKQ,eAAe;YAAEK,KAAK,IAAI;QAAC,GAClDf,MAAM,CAAC;QACZ,IAAI,CAACa,qBAAqB,MAAM,IAAIT,4BAAa,CAAC,KAAK,2BAA2B;QAElF,OAAOS;IACX;IAEA,MAAaG,gBAAgBd,GAAW,EAAsB;QAC1D,MAAMe,sBAAiC,MAAM,IAAI,CAACnB,UAAU,CACvDoB,iBAAiB,CAAChB,KAClBF,MAAM,CAAC;QACZ,IAAI,CAACiB,qBAAqB,MAAM,IAAIb,4BAAa,CAAC,KAAK,2BAA2B;QAElF,OAAOa;IACX;;QAxDA,uBAAOnB,cAAaqB,kBAAc;QAClC,uBAAOC,SAAQC,aAAS;;AAwD5B"}