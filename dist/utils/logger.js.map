{"version":3,"sources":["../../src/utils/logger.ts"],"sourcesContent":["import { existsSync, mkdirSync } from \"fs\";\nimport { join } from \"path\";\nimport winston from \"winston\";\nimport winstonDaily from \"winston-daily-rotate-file\";\n\n// logs dir\nconst logDir: string = join(__dirname, '/');\n\nif (!existsSync(logDir)) {\n\tmkdirSync(logDir);\n}\n\n// Define log format\nconst logFormat = winston.format.printf(\n\t({ timestamp, level, message }) => `${timestamp} ${level}: ${message}`\n);\n\n/*\n * Log Level\n * error: 0, warn: 1, info: 2, http: 3, verbose: 4, debug: 5, silly: 6\n */\nconst logger = winston.createLogger({\n\tformat: winston.format.combine(\n\t\twinston.format.timestamp({\n\t\t\tformat: \"YYYY-MM-DD HH:mm:ss\"\n\t\t}),\n\t\tlogFormat\n\t),\n\ttransports: [\n\t\t// debug log setting\n\t\tnew winstonDaily({\n\t\t\tlevel: \"debug\",\n\t\t\tdatePattern: \"YYYY-MM-DD\",\n\t\t\tdirname: logDir + \"/debug\", // log file /logs/debug/*.log in save\n\t\t\tfilename: `%DATE%.log`,\n\t\t\tmaxFiles: 30, // 30 Days saved\n\t\t\tjson: false,\n\t\t\tzippedArchive: true\n\t\t}),\n\t\t// error log setting\n\t\tnew winstonDaily({\n\t\t\tlevel: \"error\",\n\t\t\tdatePattern: \"YYYY-MM-DD\",\n\t\t\tdirname: logDir + \"/error\", // log file /logs/error/*.log in save\n\t\t\tfilename: `%DATE%.log`,\n\t\t\tmaxFiles: 30, // 30 Days saved\n\t\t\thandleExceptions: true,\n\t\t\tjson: false,\n\t\t\tzippedArchive: true\n\t\t})\n\t]\n});\n\nlogger.add(\n\tnew winston.transports.Console({\n\t\tformat: winston.format.combine(winston.format.splat(), winston.format.colorize())\n\t})\n);\n\nconst stream = {\n\twrite: (message: string) => {\n\t\tlogger.info(message.substring(0, message.lastIndexOf(\"\\n\")));\n\t}\n};\n\nexport { logger, stream };"],"names":["logger","stream","logDir","join","__dirname","existsSync","mkdirSync","logFormat","winston","format","printf","timestamp","level","message","createLogger","combine","transports","winstonDaily","datePattern","dirname","filename","maxFiles","json","zippedArchive","handleExceptions","add","Console","splat","colorize","write","info","substring","lastIndexOf"],"mappings":";;;;;;;;;;;IAiESA,MAAM,MAANA;IAAQC,MAAM,MAANA;;oBAjEqB;sBACjB;kDACD;iEACK;;;;;;AAGzB,MAAMC,SAAiBC,IAAAA,UAAI,EAACC,WAAW;AAEvC,IAAI,CAACC,IAAAA,cAAU,EAACH,SAAS;IACxBI,IAAAA,aAAS,EAACJ;AACX,CAAC;AAGD,MAAMK,YAAYC,gBAAO,CAACC,MAAM,CAACC,MAAM,CACtC,CAAC,EAAEC,UAAS,EAAEC,MAAK,EAAEC,QAAO,EAAE,GAAK,CAAC,EAAEF,UAAU,CAAC,EAAEC,MAAM,EAAE,EAAEC,QAAQ,CAAC;AAOvE,MAAMb,SAASQ,gBAAO,CAACM,YAAY,CAAC;IACnCL,QAAQD,gBAAO,CAACC,MAAM,CAACM,OAAO,CAC7BP,gBAAO,CAACC,MAAM,CAACE,SAAS,CAAC;QACxBF,QAAQ;IACT,IACAF;IAEDS,YAAY;QAEX,IAAIC,+BAAY,CAAC;YAChBL,OAAO;YACPM,aAAa;YACbC,SAASjB,SAAS;YAClBkB,UAAU,CAAC,UAAU,CAAC;YACtBC,UAAU;YACVC,MAAM,KAAK;YACXC,eAAe,IAAI;QACpB;QAEA,IAAIN,+BAAY,CAAC;YAChBL,OAAO;YACPM,aAAa;YACbC,SAASjB,SAAS;YAClBkB,UAAU,CAAC,UAAU,CAAC;YACtBC,UAAU;YACVG,kBAAkB,IAAI;YACtBF,MAAM,KAAK;YACXC,eAAe,IAAI;QACpB;KACA;AACF;AAEAvB,OAAOyB,GAAG,CACT,IAAIjB,gBAAO,CAACQ,UAAU,CAACU,OAAO,CAAC;IAC9BjB,QAAQD,gBAAO,CAACC,MAAM,CAACM,OAAO,CAACP,gBAAO,CAACC,MAAM,CAACkB,KAAK,IAAInB,gBAAO,CAACC,MAAM,CAACmB,QAAQ;AAC/E;AAGD,MAAM3B,SAAS;IACd4B,OAAO,CAAChB,UAAoB;QAC3Bb,OAAO8B,IAAI,CAACjB,QAAQkB,SAAS,CAAC,GAAGlB,QAAQmB,WAAW,CAAC;IACtD;AACD"}